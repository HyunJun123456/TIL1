새 브랜치 만들기
git branch
: 깃에서 브랜치를 만들거나 확인하는 명령
만들고자 하는 브랜치명을 적어주면 됨
git branch 명령은 브랜치를 만들거나 확인할 때 둘 다 사용
HEAD는 작업 중인 브랜치를 가리키는 포인터

브랜치 사이 이동하기
git checkout
: 브랜치 사이를 이동할 수 있음
뒤에다가 브랜치명을 사용하면 됨
git log --online : 한 줄에 한 커밋을 표현해줌

새 브랜치에서 커밋하기
git log --oneline --branches : 각 브랜치의 커밋을 함께 보여줌
git log --oneline --branches graph : 그래프까지 보여줌

브랜치 사이의 차이점 알아보기
git log master..apple
: master 브랜치와 apple 브랜치 사이의 차이점이 무엇인지 확인
마침표 왼쪽에 있는 브랜치를 기준으로 오른쪽 브랜치를 비교
즉, master 브랜치에는 없고 apple 브랜치에만 있는 것을 보여줌

서로 다른 파일 병합하기
git merge (o2)
: master 브랜치에 o2 브랜치를 가져와 병합\
다른 위치라면 자동으로 병합되고 
같은 위치면 충돌이 발생하게 됨
충돌이 발생한 곳을 해결하고 다시 커밋해주면 됨

병합이 끝난 브랜치 삭제하기
git branch -d (o2)
: o2 브랜치는 삭제되지만 o2에 대한 저장소만 없어진다고 생각하면 됨
깃의 흐름 속에서만 감춘다고 생각하면 됨

브랜치에서의 reset
master 브랜치에 최신 커밋 해시를 가져와 
그 버전으로 최신 커밋 시켜줌 이전에 내용들은 없어짐
sub 브랜치가 master 브랜치의 최신 커밋을 가리킴

수정 중인 파일 감추기 및 되돌리기
git stash
: 브랜치에서 파일을 수정하고 커밋하지 않은 상태에서 다른 작업을 해야할 경우
파일을 감추는 기능
스택의 방식으로 작용함(선입후출)
다시 불러오고 시키면 git stash pop을 적용
